.Dd March 30, 2013
.Dt ewfverify
.Os libewf
.Sh NAME
.Nm ewfverify
.Nd verifies media data stored in EWF files
.Sh SYNOPSIS
.Nm ewfverify
.Op Fl A Ar codepage
.Op Fl d Ar digest_type
.Op Fl f Ar format
.Op Fl l Ar log_filename
.Op Fl p Ar process_buffer_size
.Op Fl hqvVw
.Ar ewf_files
.Sh DESCRIPTION
.Nm ewfverify
is a utility to verify media data stored in EWF files.
.Pp
.Nm ewfverify
is part of the
.Nm libewf
package.
.Nm libewf
is a library to access the Expert Witness Compression Format (EWF).
.Pp
.Ar ewf_files
the first or the entire set of EWF segment files
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl A Ar codepage
the codepage of header section, options: ascii (default), windows-874, windows-932, windows-936, windows-949, windows-950, windows-1250, windows-1251, windows-1252, windows-1253, windows-1254, windows-1255, windows-1256, windows-1257 or windows-1258
.It Fl d Ar digest_type
calculate additional digest (hash) types besides md5, options: sha1, sha256
.It Fl f Ar format
specify the input format, options: raw (default), files (restricted to logical volume files)
.It Fl h
shows this help
.It Fl l Ar log_filename
logs verification errors and the digest (hash) to the log filename
.It Fl p Ar process_buffer_size
the process buffer size (default is the chunk size)
.It Fl q
quiet shows minimal status information
.It Fl v
verbose output to stderr
.It Fl V
print version
.It Fl w
zero sectors on checksum error (mimic EnCase like behavior)
.El
.Sh ENVIRONMENT
None
.Sh FILES
None
.Sh EXAMPLES
.Nm ewfverify
can either verify the raw storage media data or logical file data stored in EWF file(s).
.Ss To verify the raw storage media data:
.Bd -literal
# ewfverify floppy.E01
ewfverify 20110801

Verify started at: Tue Jan 11 19:21:51 2011

This could take a while.

Status: at 2%.
        verified 32 kB (32768 bytes) of total 1.4 MiB (1474560 bytes).

.Dl ...

Status: at 100%.
        verified 1.4 MiB (1474560 bytes) of total 1.4 MiB (1474560 bytes).
        completion in 1 second(s) with 1 MiB/s (1474560 bytes/second).

Verify completed at: Tue Jan 11 19:21:52 2011

Read: 1.4 MiB (1474560 bytes) in 1 second(s) with 1 MiB/s (1474560 bytes/second).

MD5 hash stored in file:		ae1ce8f5ac079d3ee93f97fe3792bda3
MD5 hash calculated over data:		ae1ce8f5ac079d3ee93f97fe3792bda3

ewfverify: SUCCESS
.Ed
.Ss To verify logical file data:
.Bd -literal
# ewfverify -f files logical.E01
ewfverify 20110111

Verify started at: Tue Jan 11 19:21:51 2011

Single file: file1.txt
MD5 hash stored in file:		6fef2a64afbf070a264366183698bb5e
MD5 hash calculated over data:		6fef2a64afbf070a264366183698bb5e

.Dl ...

Verify completed at: Tue Jan 11 19:21:52 2011

ewfverify: SUCCESS
.Ed
.Sh DIAGNOSTICS
Errors, verbose and debug output are printed to stderr when verbose output \-v is enabled. Verbose and debug output are only printed when enabled at compilation.
.Sh BUGS
Please report bugs of any kind to <joachim.metz@gmail.com> or on the project website:
http://code.google.com/p/libewf/
.Sh AUTHOR
.Pp
These man pages were written by Kees Mastwijk.
.Pp
Alterations for distribution have been made by Joachim Metz.
.Sh COPYRIGHT
.Pp
Copyright 2006-2013, Joachim Metz <joachim.metz@gmail.com>.
.Pp
This is free software; see the source for copying conditions. There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.Sh SEE ALSO
.Xr ewfacquire 1 ,
.Xr ewfacquirestream 1 ,
.Xr ewfexport 1 ,
.Xr ewfinfo 1 ,
.Xr ewfmount 1 ,
.Xr ewfrecover 1
